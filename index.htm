<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>My ePub Reader and Library</title>
  <meta name="viewport" content="width=device-width, maximum-scale=1.0, user-scalable=no" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.5/jszip.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/epubjs/dist/epub.min.js"></script>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      height: 100%;
      font-family: sans-serif;
      background: #f5f5f5;
    }
    body.light-mode { background: #f5f5f5; }
    body.light-mode #toolbar { background: #eee; }
    body.sepia-mode { background: #f4ecd8; }
    body.sepia-mode #toolbar { background: #e7dbc3; }
    body.matcha-mode { background: #C3D8B6; }
    body.matcha-mode #toolbar { background: #B0CFA3; }
    body.night-mode { background: #111 !important; }
    body.night-mode #toolbar { background: #222 !important; }

    #toolbar {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      height: 44px;
      z-index: 1002;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0 6px;
      box-sizing: border-box;
    }
    #toolbar-left, #toolbar-right {
      display: flex;
      align-items: center;
      gap: 6px;
    }
    #toolbar button {
      background: transparent;
      border: none;
      font-size: 20px;
      cursor: pointer;
      opacity: 0.8;
      width: 32px;
      height: 32px;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    #toolbar button:hover { opacity: 1; }

    #search-bar {
      display: flex;
      align-items: center;
      background: white;
      border: 1px solid #ccc;
      border-radius: 4px;
      padding: 2px 6px;
    }
    #search-bar input {
      border: none;
      font-size: 13px;
      outline: none;
      width: 100px;
      background: transparent;
    }

    #pages-read {
      font-size: 12px;
      min-width: 60px;
    }

    #ffbar input[type="range"] {
      width: 80px;
    }

    #search-results {
      position: fixed;
      top: 44px;
      left: 10px;
      right: 10px;
      background: white;
      border: 1px solid #ccc;
      max-height: 200px;
      overflow-y: auto;
      font-size: 13px;
      z-index: 1001;
      display: none;
    }

    #search-results div {
      padding: 4px 8px;
      cursor: pointer;
    }
    #search-results div:hover {
      background: #eee;
    }

    #viewer {
      position: absolute;
      top: 44px;
      left: 0;
      right: 0;
      bottom: 0;
      overflow: hidden;
      touch-action: pan-x;
      background: white;
    }
  </style>
</head>
<body class="light-mode">
  <div id="toolbar">
    <div id="toolbar-left">
      <button id="menu-toggle" title="Main Menu">â˜°</button>
      <button id="toc-toggle" title="Table of Contents">ðŸ“–</button>
      <button id="bookmark-toggle" title="Toggle Bookmark">â˜†</button>
      <button id="bookmark-dropdown" title="Bookmarks">ðŸ”–</button>
      <button id="settings-toggle" title="Read Settings">Aa</button>
    </div>
    <div id="toolbar-right">
      <div id="search-bar">
        <input type="text" id="searchInput" placeholder="Searchâ€¦" />
      </div>
      <div id="pages-read">Pg 1 of 1</div>
      <div id="ffbar">
        <input type="range" id="pageSlider" min="1" max="1" value="1" />
      </div>
    </div>
  </div>

  <div id="search-results"></div>

  <div id="viewer">
    <div id="tap-left"></div>
    <div id="tap-right"></div>
    <div id="gesture-left"></div>
    <div id="gesture-right"></div>
  </div>

  <div id="progress-bar"></div>
  <div id="continue-bar">Continue</div>
  <div id="bookmark-panel"></div>

  <div id="menu-backdrop"></div>
  <div id="expanded-menu">
    <button class="close-menu" onclick="toggleMenu('menu')">Ã—</button>
    <div id="book-card">
      <img id="cover" alt="Book Cover" />
      <div id="book-title"></div>
      <div id="book-author"></div>
      <div id="contact-image"></div>
    </div>
    <button class="menu-button" onclick="toggleLibrary(true)">Library</button>
  </div>

  <div id="toc-panel"></div>

  <div id="settings-modal">
    <button class="close-settings" onclick="toggleMenu('settings')">Ã—</button>
    <h3>Reading Settings</h3>
    <label for="font-switcher">Font</label>
    <select id="font-switcher">
      <option value="-apple-system">San Francisco (System)</option>
      <option value="Helvetica Neue">Helvetica Neue</option>
      <option value="Arial">Arial</option>
      <option value="Courier New">Courier New</option>
      <option value="Georgia">Georgia</option>
      <option value="OpenDyslexic">OpenDyslexic</option>
    </select>
    <div class="font-size-buttons">
      <button onclick="changeFontSize(-1)">A-</button>
      <button onclick="changeFontSize(1)">A+</button>
    </div>
    <label for="reading-mode">Reading Mode</label>
    <select id="reading-mode">
      <option value="paginated">Page</option>
      <option value="scrolled-doc">Scroll</option>
      <option value="swipe">Swipe</option>
    </select>
    <label for="theme-select">Color Theme</label>
    <select id="theme-select">
      <option value="light">Light</option>
      <option value="sepia">Sepia</option>
      <option value="night">Night</option>
      <option value="matcha">Matcha Green</option>
    </select>
  </div>
<script>
  let book, rendition;
  let currentBookUrl = "/ebooks/pride.epub";
  let totalLocations = 1;
  let bookmarks = [];

  const viewer = document.getElementById("viewer");
  const sliderEl = document.getElementById("pageSlider");
  const pagesReadEl = document.getElementById("pages-read");
  const searchInput = document.getElementById("searchInput");
  const searchResults = document.getElementById("search-results");

  function updatePageDisplay(location) {
    if (!book || !book.locations) return;
    const percent = book.locations.percentageFromCfi(location.start.cfi);
    const page = Math.floor(percent * totalLocations) + 1;
    pagesReadEl.textContent = `Pg ${page} of ${totalLocations}`;
    sliderEl.value = page;
  }

  function initBook(url) {
    book = ePub(url);
    rendition = book.renderTo("viewer", {
      width: "100%",
      height: "100%",
      flow: "paginated",
      snap: true,
      spread: "always"
    });

    rendition.display();

    rendition.on("relocated", location => {
      updatePageDisplay(location);
      localStorage.setItem("last-location-" + url, location.start.cfi);
    });

    book.ready.then(() => {
      book.locations.generate(1000).then(() => {
        totalLocations = book.locations.total;
        sliderEl.max = totalLocations;
        sliderEl.value = 1;
      });
    });

    book.loaded.metadata.then(meta => {
      document.getElementById("book-title").textContent = meta.title || "Untitled";
      document.getElementById("book-author").textContent = meta.creator || "";
    });

    book.loaded.cover
      .then(coverUrl => book.archive.createUrl(coverUrl, { base64: true }))
      .then(coverDataUrl => { document.getElementById("cover").src = coverDataUrl; })
      .catch(() => console.warn("No cover image found."));

    searchInput.addEventListener("input", function () {
      const query = this.value.trim();
      if (!query || !book) return (searchResults.style.display = "none");

      book.search(query).then(results => {
        searchResults.innerHTML = "";
        results.slice(0, 10).forEach(result => {
          const div = document.createElement("div");
          div.textContent = result.excerpt || "Match";
          div.onclick = () => {
            rendition.display(result.cfi);
            searchResults.style.display = "none";
          };
          searchResults.appendChild(div);
        });
        searchResults.style.display = results.length ? "block" : "none";
      });
    });

    sliderEl.addEventListener("input", function () {
      const percent = parseInt(this.value) / parseInt(this.max);
      const cfi = book.locations.cfiFromPercentage(percent);
      rendition.display(cfi);
    });
  }

  initBook(currentBookUrl);
</script>
</body>
</html>

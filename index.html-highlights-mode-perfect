<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Highlight Demo ‚Äì Fixed Toolbar</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <style>
    /* ---- Reset & Body ---- */
    html, body {
      margin: 0; padding: 0;
      font-family: Arial, sans-serif;
      background: #f5f5f5;
    }

    /* ---- Fixed Top Toolbar ---- */
    #toolbar {
      position: fixed;
      top: 0; left: 0; right: 0;
      height: 50px;
      display: flex;
      align-items: center;
      justify-content: flex-end;
      padding: 0 20px;
      background: rgba(255,255,255,0.95);
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      z-index: 1000;
    }
    #toolbar button {
      margin-left: 12px;
      padding: 8px 14px;
      border: none; border-radius: 4px;
      background: #4285f4; color: #fff;
      font-size: 16px; cursor: pointer;
      transition: background .2s;
    }
    #toolbar button:hover {
      background: #3367d6;
    }
    #toolbar button.active {
      background: #ffcc00; color: #000;
    }

    /* ---- Page Content ---- */
    .container {
      padding: 80px 20px 20px; /* top padding leaves room for toolbar */
      max-width: 800px;
      margin: 0 auto;
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .page-content p {
      line-height: 1.6;
      margin-bottom: 15px;
      cursor: pointer;
    }

    /* ---- Selected Outline ---- */
    p.selected {
      border: 2px dashed #666;
      padding: 10px;
      border-radius: 4px;
    }

    /* ---- Highlight Colors ---- */
    .highlight-yellow { background: rgba(255,255,0,0.3); }
    .highlight-green  { background: rgba(0,255,0,0.2); }
    .highlight-blue   { background: rgba(0,191,255,0.2); }
    .highlight-pink   { background: rgba(255,105,180,0.2); }

    /* ---- Highlight Menu ---- */
    #highlight-menu {
      display: none;
      position: fixed; top: 50%; left: 50%;
      transform: translate(-50%,-50%);
      background: #fff; padding: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 15px rgba(0,0,0,0.3);
      z-index: 2000;
      width: 300px;
    }
    .color-options {
      display: flex; justify-content: center; gap: 15px; margin: 15px 0;
    }
    .color-option {
      width: 30px; height: 30px; border-radius: 50%;
      cursor: pointer; border: 2px solid transparent;
    }
    .color-option.selected {
      border-color: #333;
    }
    textarea {
      width: 100%; height: 80px;
      margin: 10px 0; padding: 8px;
      border: 1px solid #ccc; border-radius: 4px;
      resize: none;
    }
    .menu-buttons {
      display: flex; justify-content: space-between;
    }
    .menu-buttons button {
      padding: 6px 12px;
      border: none; border-radius: 4px;
      cursor: pointer;
    }

    /* ---- Toast ---- */
    .toast {
      position: fixed; bottom: 20px; left: 50%;
      transform: translateX(-50%);
      background: rgba(0,0,0,0.8); color: #fff;
      padding: 8px 16px; border-radius: 16px;
      z-index: 3000;
    }
  </style>
</head>
<body>
  <!-- Top Toolbar -->
  <div id="toolbar">
    <button id="highlight-toggle-toolbar">üñçÔ∏è Highlight Mode</button>
    <button id="view-highlights-btn">üìã View Highlights</button>
  </div>

  <!-- Main Content -->
  <div class="container">
    <h1>Sample Chapter</h1>
    <div class="page-content">
      <p data-index="0">This is the first paragraph...</p>
      <p data-index="1">This is the second paragraph...</p>
      <p data-index="2">This is the third paragraph...</p>
      <p data-index="3">This is another paragraph...</p>
      <p data-index="4">When you activate highlight mode...</p>
      <p data-index="5">After selecting a color...</p>
      <p data-index="6">You can view all your highlights...</p>
    </div>

    <!-- Highlight Menu -->
    <div id="highlight-menu">
      <h3>Create Highlight</h3>
      <div class="color-options">
        <div class="color-option selected" style="background:#ffff00" data-color="yellow"></div>
        <div class="color-option" style="background:#00ff00" data-color="green"></div>
        <div class="color-option" style="background:#00bfff" data-color="blue"></div>
        <div class="color-option" style="background:#ff69b4" data-color="pink"></div>
      </div>
      <textarea id="note-input" placeholder="Optional note..."></textarea>
      <div class="menu-buttons">
        <button id="save-highlight">Save</button>
        <button id="cancel-highlight">Cancel</button>
      </div>
    </div>
  </div>

  <script>
    // Elements
    const highlightBtn      = document.getElementById('highlight-toggle-toolbar');
    const viewHighlightsBtn = document.getElementById('view-highlights-btn');
    const paragraphs        = document.querySelectorAll('.page-content p');
    const menu              = document.getElementById('highlight-menu');
    const saveBtn           = document.getElementById('save-highlight');
    const cancelBtn         = document.getElementById('cancel-highlight');
    const noteInput         = document.getElementById('note-input');
    const colors            = document.querySelectorAll('.color-option');
    let highlightMode       = false;
    let selectedPara        = null;
    let selectedColor       = 'yellow';
    let highlights          = JSON.parse(localStorage.getItem('highlights')||'[]');

    // Toast helper
    function showToast(msg) {
      const t = document.createElement('div');
      t.className = 'toast'; t.textContent = msg;
      document.body.appendChild(t);
      setTimeout(()=>t.remove(), 2000);
    }

    // Toggle highlight mode
    highlightBtn.addEventListener('click', () => {
      highlightMode = !highlightMode;
      highlightBtn.classList.toggle('active');
      showToast(highlightMode ? 'Highlight mode ON' : 'Highlight mode OFF');
      if (!highlightMode && selectedPara) {
        selectedPara.classList.remove('selected');
        selectedPara = null;
      }
    });

    // Paragraph click
    paragraphs.forEach(p => {
      p.addEventListener('click', () => {
        if (!highlightMode) return;
        if (selectedPara) selectedPara.classList.remove('selected');
        selectedPara = p; p.classList.add('selected');
        noteInput.value = '';
        menu.style.display = 'block';
      });
    });

    // Color pick
    colors.forEach(c => {
      c.addEventListener('click', () => {
        selectedColor = c.dataset.color;
        colors.forEach(x=>x.classList.remove('selected'));
        c.classList.add('selected');
      });
    });

    // Save highlight
    saveBtn.addEventListener('click', () => {
      if (!selectedPara) return;
      const idx = +selectedPara.dataset.index;
      const note = noteInput.value.trim();
      selectedPara.className = 'highlight-' + selectedColor;
      selectedPara.classList.remove('selected');
      highlights.push({ idx, color: selectedColor, note, text: selectedPara.textContent });
      localStorage.setItem('highlights', JSON.stringify(highlights));
      menu.style.display = 'none'; selectedPara = null;
      showToast('Saved!');
    });

    // Cancel
    cancelBtn.addEventListener('click', () => {
      if (selectedPara) selectedPara.classList.remove('selected');
      selectedPara = null; menu.style.display = 'none';
    });

    // Initial load
    if (highlights.length) {
      highlights.forEach(h => {
        const p = document.querySelector(`.page-content p[data-index="${h.idx}"]`);
        if (p) p.className = 'highlight-' + h.color;
      });
    }
  </script>
</body>
</html>
